name: Development CI/CD Deployment

on:
  push:
    branches:
      - dev
      - stable
      - prod

jobs:
  frontend-build:
    name: Build Frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

  laravel-build:
    name: Build Laravel
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'
          extensions: mbstring, intl, zip, pcntl, pdo, pdo_mysql, tokenizer, xml, ctype, json, curl, dom, fileinfo, filter, hash, iconv, json, pdo, session, simplexml, tokenizer, xml, xmlwriter, zip, openssl, bcmath, ctype, fileinfo, json, tokenizer, xml, zip, pdo_mysql, pdo_sqlite, sqlite3, pdo_pgsql, pgsql, pdo_sqlsrv, sqlsrv, pdo_dblib, pdo_oci, oci8, pdo_firebird, pdo_ibm, pdo_informix, pdo_oci, pdo_odbc, pdo_pgsql, pdo_sqlsrv, pdo_sqlite, pdo_ibm, pdo_informix, pdo_firebird, pdo_dblib, pdo_oci, pdo_odbc, pdo_pgsql, pdo_sqlsrv, pdo_sqlite, pdo_ibm, pdo_informix, pdo_firebird, pdo_dblib, pdo_oci, pdo_odbc, pdo_pgsql, pdo_sqlsrv, pdo_sqlite, pdo_ibm, pdo_informix, pdo_firebird, pdo_dblib, pdo_oci, pdo_odbc, pdo_pgsql, pdo_sqlsrv, pdo_sqlite, pdo_ibm, pdo_informix, pdo_firebird, pdo_dblib, pdo_oci, pdo_odbc, pdo_pgsql, pdo_sqlsrv, pdo_sqlite, pdo_ibm, pdo_informix, pdo_firebird, pdo_dblib, pdo_oci, pdo_odbc, pdo_pgsql, pdo_sqlsrv, pdo_sqlite, pdo_ibm, pdo_informix, pdo_firebird, pdo_dblib, pdo_oci, pdo_odbc, pdo_pgsql, pdo_sqlsrv, pdo_sqlite, pdo_ibm, pdo_informix, pdo_firebird, pdo_dblib, pdo_oci, pdo_odbc, pdo_pgsql, pdo_sqlsrv, pdo_sqlite, pdo_ibm, pdo_informix, pdo_firebird, pdo_dblib, pdo_oci, pdo_odbc, pdo_pgsql, pdo_sqlsrv, pdo
          ini-values: memory_limit=1G
          coverage: none

      - name: Install dependencies
        run: composer install

      - name: Run tests
        run: vendor/bin/phpunit

  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    needs: [frontend-build, laravel-build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Determine branch
        id: branch
        run: echo "::set-output name=branch::${GITHUB_REF#refs/heads/}"

      - name: Deploy using SSH
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: 22
          script: |
            cd /var/www/stp-ez
            if [ "${{ steps.branch.outputs.branch }}" == "dev" ]; then
              export PUBLIC_IP=${PUBLIC_IP_DEV}
              export APP_PORT=81
              # sh to docker file
              sh docker/sh/dev.sh
            elif [ "${{ steps.branch.outputs.branch }}" == "stable" ]; then
              export PUBLIC_IP=${PUBLIC_IP_STABLE}
              export APP_PORT=82
              sh docker/sh/stable.sh
            elif [ "${{ steps.branch.outputs.branch }}" == "prod" ]; then
              export PUBLIC_IP=${PUBLIC_IP_PROD}
              export APP_PORT=83
              sh docker/sh/prod.sh
            fi

            # Verify deployment
            echo "Verifying deployment..."
            docker-compose ps

            # Check app health
            echo "Checking laravel_application health..."
            if [ "${{ steps.branch.outputs.branch }}" == "dev" ]; then
              curl -sS http://${PUBLIC_IP_DEV}:81|| echo "Warning: Application not running"
            elif [ "${{ steps.branch.outputs.branch }}" == "stable" ]; then
              curl -sS http://${PUBLIC_IP_STABLE}:82 || echo "Warning: Application not running"
            elif [ "${{ steps.branch.outputs.branch }}" == "prod" ]; then
              curl -sS http://${PUBLIC_IP_PROD}:83 || echo "Warning: Application not running"
            fi